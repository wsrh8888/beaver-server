// Code generated by goctl. DO NOT EDIT.
// Source: dictionary_rpc.proto

package server

import (
	"context"

	"beaver/app/dictionary/dictionary_rpc/internal/logic"
	"beaver/app/dictionary/dictionary_rpc/internal/svc"
	"beaver/app/dictionary/dictionary_rpc/types/dictionary_rpc"
)

type DictionaryServer struct {
	svcCtx *svc.ServiceContext
	dictionary_rpc.UnimplementedDictionaryServer
}

func NewDictionaryServer(svcCtx *svc.ServiceContext) *DictionaryServer {
	return &DictionaryServer{
		svcCtx: svcCtx,
	}
}

// 获取城市列表
func (s *DictionaryServer) GetCities(ctx context.Context, in *dictionary_rpc.GetCitiesReq) (*dictionary_rpc.GetCitiesRes, error) {
	l := logic.NewGetCitiesLogic(ctx, s.svcCtx)
	return l.GetCities(in)
}

// 获取平台列表
func (s *DictionaryServer) GetPlatforms(ctx context.Context, in *dictionary_rpc.GetPlatformsReq) (*dictionary_rpc.GetPlatformsRes, error) {
	l := logic.NewGetPlatformsLogic(ctx, s.svcCtx)
	return l.GetPlatforms(in)
}

// 获取架构列表
func (s *DictionaryServer) GetArchitectures(ctx context.Context, in *dictionary_rpc.GetArchitecturesReq) (*dictionary_rpc.GetArchitecturesRes, error) {
	l := logic.NewGetArchitecturesLogic(ctx, s.svcCtx)
	return l.GetArchitectures(in)
}
