// Code generated by goctl. DO NOT EDIT.
package types

type GroupAnnouncementReq struct {
	UserID       string `header:"Beaver-User-Id"` // 操作者用户ID（群主或管理员）
	GroupID      string `json:"groupId"`          // 群组ID
	Announcement string `json:"announcement"`     // 公告内容
}

type GroupAnnouncementRes struct {
}

type GroupInfo struct {
	Title          string `json:"title"`          // 群组名称
	Avatar         string `json:"avatar"`         // 群组头像URL
	MemberCount    int    `json:"memberCount"`    // 成员数量
	ConversationID string `json:"conversationId"` // 会话ID
}

type GroupInfoReq struct {
	GroupID string `json:"groupId"` // 群组ID
}

type GroupInfoRes struct {
	Title          string `json:"title"`          // 群组名称
	Avatar         string `json:"avatar"`         // 群组头像URL
	ConversationID string `json:"conversationId"` // 会话ID
}

type GroupInviteReq struct {
	UserID   string   `header:"Beaver-User-Id"` // 邀请者用户ID
	GroupID  string   `json:"groupId"`          // 群组ID
	UserList []string `json:"userList"`         // 被邀请的用户ID列表
	Message  string   `json:"message,optional"` // 邀请消息，可选
}

type GroupInviteRes struct {
}

type GroupJoinReq struct {
	UserID  string `header:"Beaver-User-Id"` // 申请者用户ID
	GroupID string `json:"groupId"`          // 目标群组ID
	Message string `json:"message,optional"` // 申请消息，可选
}

type GroupJoinRes struct {
}

type GroupMember struct {
	UserID   string `json:"userId"`   // 成员用户ID
	Nickname string `json:"nickname"` // 成员昵称
	Avatar   string `json:"avatar"`   // 成员头像URL
	Role     int8   `json:"role"`     // 成员角色：0普通成员 1管理员 2群主
	JoinTime string `json:"joinTime"` // 加入时间
}

type GroupMemberListReq struct {
	UserID  string `header:"Beaver-User-Id"` // 查询者用户ID
	GroupID string `json:"groupId"`          // 群组ID
	Page    int    `json:"page,optional"`    // 页码，可选，默认1
	Limit   int    `json:"limit,optional"`   // 每页数量，可选，默认20
}

type GroupMemberListRes struct {
	List  []GroupMember `json:"list"`  // 成员列表
	Count int64         `json:"count"` // 总数
}

type GroupMineReq struct {
	UserID string `header:"Beaver-User-Id"` // 查询者用户ID
	Page   int    `json:"page,optional"`    // 页码，可选，默认1
	Limit  int    `json:"limit,optional"`   // 每页数量，可选，默认20
}

type GroupMineRes struct {
	List  []GroupInfo `json:"list"`  // 群组列表
	Count int         `json:"count"` // 总数
}

type GroupMuteListReq struct {
	UserID  string `header:"Beaver-User-Id"` // 查询者用户ID
	GroupID string `json:"groupId"`          // 群组ID
	Page    int    `json:"page,optional"`    // 页码，可选，默认1
	Limit   int    `json:"limit,optional"`   // 每页数量，可选，默认20
}

type GroupMuteListRes struct {
	List  []GroupMember `json:"list"`  // 被禁言的成员列表
	Count int64         `json:"count"` // 总数
}

type GroupMuteReq struct {
	UserID   string `header:"Beaver-User-Id"` // 操作者用户ID（群主或管理员）
	GroupID  string `json:"groupId"`          // 群组ID
	MemberID string `json:"memberId"`         // 目标成员ID
	Duration int    `json:"duration"`         // 禁言时长(分钟)，0表示解除禁言
}

type GroupMuteRes struct {
}

type GroupQuitReq struct {
	UserID  string `header:"Beaver-User-Id"` // 退出者用户ID
	GroupID string `json:"groupId"`          // 群组ID
}

type GroupQuitRes struct {
}

type GroupSettingsReq struct {
	UserID       string `header:"Beaver-User-Id"`      // 操作者用户ID（群主或管理员）
	GroupID      string `json:"groupId"`               // 群组ID
	MuteAll      bool   `json:"muteAll,optional"`      // 是否全员禁言
	JoinAuth     int    `json:"joinAuth,optional"`     // 加群验证：0无需验证 1需要验证 2不允许加入
	MemberInvite bool   `json:"memberInvite,optional"` // 是否允许成员邀请他人
	MemberAuth   bool   `json:"memberAuth,optional"`   // 是否允许成员管理群组
}

type GroupSettingsRes struct {
}

type TransferOwnerReq struct {
	UserID     string `header:"Beaver-User-Id"` // 当前群主ID
	GroupID    string `json:"groupId"`          // 群组ID
	NewOwnerID string `json:"newOwnerId"`       // 新群主ID
}

type TransferOwnerRes struct {
}

type UpdateDisplayNameReq struct {
	UserID      string `header:"Beaver-User-Id"` // 操作者用户ID
	GroupID     string `json:"groupId"`          // 群组ID
	DisplayName string `json:"displayName"`      // 新的群内显示名称
}

type UpdateDisplayNameRes struct {
}

type UpdateGroupInfoReq struct {
	UserID   string `header:"Beaver-User-Id"`  // 操作者用户ID（群主或管理员）
	GroupID  string `json:"groupId"`           // 群组ID
	Name     string `json:"name,optional"`     // 新群名称，可选
	Avatar   string `json:"avatar,optional"`   // 新群头像URL，可选
	Notice   string `json:"notice,optional"`   // 新群公告，可选
	JoinType int    `json:"joinType,optional"` // 加入方式：0自由加入 1需要验证 2不允许加入
}

type UpdateGroupInfoRes struct {
}

type UpdateMemberRoleReq struct {
	UserID   string `header:"Beaver-User-Id"` // 操作者用户ID（群主）
	GroupID  string `json:"groupId"`          // 群组ID
	MemberID string `json:"memberId"`         // 目标成员ID
	Role     int8   `json:"role"`             // 新角色：0普通成员 1管理员
}

type UpdateMemberRoleRes struct {
}

type GroupCreateReq struct {
	UserID     string   `header:"Beaver-User-Id"`    // 创建者用户ID
	Name       string   `json:"name,optional"`       // 群组名称，可选
	UserIdList []string `json:"userIdList,optional"` // 初始成员ID列表，可选
}

type GroupCreateRes struct {
	GroupID string `json:"groupId"` // 创建的群组ID
}

type GroupDeleteReq struct {
	UserID  string `header:"Beaver-User-Id"` // 操作者用户ID
	GroupID string `path:"groupId"`          // 要删除的群组ID
}

type GroupDeleteRes struct {
}

type GroupMemberAddReq struct {
	UserID  string   `header:"Beaver-User-Id"` // 操作者用户ID（群主或管理员）
	GroupID string   `json:"groupId"`          // 群组ID
	UserIds []string `json:"userIds"`          // 要添加的成员ID列表
}

type GroupMemberAddRes struct {
}

type GroupMemberRemoveReq struct {
	UserID    string   `header:"Beaver-User-Id"` // 操作者用户ID（群主或管理员）
	GroupID   string   `json:"groupId"`          // 群组ID
	MemberIDs []string `json:"memberIds"`        // 要移除的成员ID
}

type GroupMemberRemoveRes struct {
}
