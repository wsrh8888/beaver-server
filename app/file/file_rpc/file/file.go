// Code generated by goctl. DO NOT EDIT.
// goctl 1.8.3
// Source: file_rpc.proto

package file

import (
	"context"

	"beaver/app/file/file_rpc/types/file_rpc"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	GetFileDetailReq       = file_rpc.GetFileDetailReq
	GetFileDetailRes       = file_rpc.GetFileDetailRes
	GetQiniuUploadTokenReq = file_rpc.GetQiniuUploadTokenReq
	GetQiniuUploadTokenRes = file_rpc.GetQiniuUploadTokenRes

	File interface {
		// 通过fileName查询文件详情
		GetFileDetail(ctx context.Context, in *GetFileDetailReq, opts ...grpc.CallOption) (*GetFileDetailRes, error)
		// 获取七牛云上传token
		GetQiniuUploadToken(ctx context.Context, in *GetQiniuUploadTokenReq, opts ...grpc.CallOption) (*GetQiniuUploadTokenRes, error)
	}

	defaultFile struct {
		cli zrpc.Client
	}
)

func NewFile(cli zrpc.Client) File {
	return &defaultFile{
		cli: cli,
	}
}

// 通过fileName查询文件详情
func (m *defaultFile) GetFileDetail(ctx context.Context, in *GetFileDetailReq, opts ...grpc.CallOption) (*GetFileDetailRes, error) {
	client := file_rpc.NewFileClient(m.cli.Conn())
	return client.GetFileDetail(ctx, in, opts...)
}

// 获取七牛云上传token
func (m *defaultFile) GetQiniuUploadToken(ctx context.Context, in *GetQiniuUploadTokenReq, opts ...grpc.CallOption) (*GetQiniuUploadTokenRes, error) {
	client := file_rpc.NewFileClient(m.cli.Conn())
	return client.GetQiniuUploadToken(ctx, in, opts...)
}
