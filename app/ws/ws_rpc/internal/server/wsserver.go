// Code generated by goctl. DO NOT EDIT.
// Source: ws_rpc.proto

package server

import (
	"context"

	"beaver/app/ws/ws_rpc/internal/logic"
	"beaver/app/ws/ws_rpc/internal/svc"
	"beaver/app/ws/ws_rpc/types/ws_rpc"
)

type WsServer struct {
	svcCtx *svc.ServiceContext
	ws_rpc.UnimplementedWsServer
}

func NewWsServer(svcCtx *svc.ServiceContext) *WsServer {
	return &WsServer{
		svcCtx: svcCtx,
	}
}

func (s *WsServer) HandleWebSocket(ctx context.Context, in *ws_rpc.HandleWebSocketRequest) (*ws_rpc.HandleWebSocketResponse, error) {
	l := logic.NewHandleWebSocketLogic(ctx, s.svcCtx)
	return l.HandleWebSocket(in)
}

func (s *WsServer) SendProxyMessage(ctx context.Context, in *ws_rpc.SendProxyMessageRequest) (*ws_rpc.SendProxyMessageResponse, error) {
	l := logic.NewSendProxyMessageLogic(ctx, s.svcCtx)
	return l.SendProxyMessage(in)
}
