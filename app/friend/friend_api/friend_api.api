syntax = "v1"

type addFriendReq {
	UserID   string `header:"Beaver-User-Id"` // 当前用户ID
	FriendID string `json:"friendId"` // 要添加的好友用户ID
	Verify   string `json:"verify,optional"` // 验证消息，可选
	Source   string `json:"source"` // 添加好友来源：email(邮箱搜索)/qrcode(扫码)
}

type addFriendRes {}

type FriendDeleteReq {
	UserID   string `header:"Beaver-User-Id"` // 当前用户ID
	FriendID string `json:"friendId"` // 要删除的好友用户ID
}

type FriendDeleteRes {}

type friendListReq {
	UserID string `header:"Beaver-User-Id"` // 当前用户ID
	Page   int    `form:"page,optional"` // 页码，可选，默认1
	Limit  int    `form:"limit,optional"` // 每页数量，可选，默认20
}

type friendListRes {
	list []FriendInfoRes `json:"list"` // 好友列表
}

type userValidReq {
	UserID   string `header:"Beaver-User-Id"` // 当前用户ID
	Role     int8   `header:"Role"` // 用户角色
	FriendID uint   `json:"friendId"` // 好友用户ID
}

type userValidRes {
	Verification int8 `json:"verification"` // 好友验证状态：0(未处理)/1(已通过)/2(已拒绝)
}

type FriendValidStatusReq {
	UserID   string `header:"Beaver-User-Id"` // 当前用户ID
	VerifyID uint   `json:"verifyId"` // 验证记录ID
	Status   int8   `json:"status"` // 处理状态：1(同意)/2(拒绝)
}

type FriendValidStatusRes {}

type validListReq {
	UserID string `header:"Beaver-User-Id"` // 当前用户ID
	Page   int    `json:"page,optional"` // 页码，可选，默认1
	Limit  int    `json:"limit,optional"` // 每页数量，可选，默认20
}

type FriendValidInfo {
	UserID    string `json:"userId"` // 用户ID
	Nickname  string `json:"nickname"` // 用户昵称
	FileName  string `json:"fileName"` // 用户头像文件名
	Message   string `json:"message"` // 验证消息
	Source    string `json:"source"` // 添加好友来源：email/qrcode
	Id        uint   `json:"id"` // 验证记录ID
	Flag      string `json:"flag"` // 用户角色：send(发送者)/receive(接收者)
	Status    int8   `json:"status"` // 验证状态：0(未处理)/1(已通过)/2(已拒绝)
	CreatedAt string `json:"createdAt"` // 验证时间
}

type validListRes {
	List  []FriendValidInfo `json:"list"` // 验证记录列表
	Count int64             `json:"count"` // 总记录数
}

type FriendInfoReq {
	UserID   string `header:"Beaver-User-Id"` // 当前用户ID
	FriendID string `form:"friendId"` // 好友用户ID
}

type FriendInfoRes {
	UserID         string `json:"userId"` // 用户ID
	Nickname       string `json:"nickname"` // 用户昵称
	FileName       string `json:"fileName"` // 用户头像文件名
	Abstract       string `json:"abstract"` // 用户签名
	Notice         string `json:"notice"` // 好友备注
	IsFriend       bool   `json:"isFriend"` // 是否为好友关系
	ConversationID string `json:"conversationId"` // 会话ID
	Email          string `json:"email"` // 用户邮箱
	Source         string `json:"source"` // 好友关系来源：email/qrcode
}

type NoticeUpdateReq {
	UserID   string `header:"Beaver-User-Id"` // 当前用户ID
	FriendID string `json:"friendId"` // 好友用户ID
	Notice   string `json:"notice"` // 新的备注内容
}

type NoticeUpdateRes {}

type SearchReq {
	UserID string `header:"Beaver-User-Id"` // 当前用户ID
	Email  string `form:"email"` // 搜索的邮箱地址
}

type SearchRes {
	UserID         string `json:"userId"` // 用户ID
	Nickname       string `json:"nickname"` // 用户昵称
	FileName       string `json:"fileName"` // 用户头像文件名
	Abstract       string `json:"abstract"` // 用户签名
	Notice         string `json:"notice"` // 好友备注
	IsFriend       bool   `json:"isFriend"` // 是否为好友关系
	ConversationID string `json:"conversationId"` // 会话ID
	Email          string `json:"email"` // 用户邮箱
}

type SearchValidInfoReq {
	UserID   string `header:"Beaver-User-Id"` // 当前用户ID
	FriendID string `json:"friendId"` // 好友用户ID
}

type SearchValidInfoRes {
	ValidID uint `json:"validId"` // 验证记录ID
}

service friend {
	@doc "发送好友验证请求"
	@handler addFriend
	post /api/friend/add_friend (addFriendReq) returns (addFriendRes)

	@doc "处理好友验证请求(同意/拒绝)"
	@handler userValidStatus
	post /api/friend/valid (FriendValidStatusReq) returns (FriendValidStatusRes)

	@doc "删除好友关系"
	@handler friendDelete
	delete /api/friend/delete (FriendDeleteReq) returns (FriendDeleteRes)

	@doc "获取好友列表"
	@handler friendList
	get /api/friend/friend_list (friendListReq) returns (friendListRes)

	@doc "获取好友验证请求列表"
	@handler validList
	post /api/friend/valid_list (validListReq) returns (validListRes)

	@doc "获取好友详细信息"
	@handler friendInfo
	get /api/friend/friend_info (FriendInfoReq) returns (FriendInfoRes)

	@doc "修改好友备注"
	@handler noticeUpdate
	post /api/friend/update_notice (NoticeUpdateReq) returns (NoticeUpdateRes)

	@doc "通过邮箱搜索用户"
	@handler search
	get /api/friend/search (SearchReq) returns (SearchRes)

	@doc "查询好友验证记录"
	@handler searchValidInfo
	post /api/friend/searchValidInfo (SearchValidInfoReq) returns (SearchValidInfoRes)
}

// goctl api go -api friend_api.api -dir . --home ../../../template
