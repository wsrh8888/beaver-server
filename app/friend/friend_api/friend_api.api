syntax = "v1"

type addFriendReq {
	UserId   string `header:"Beaver-User-Id"`
	FriendId string `json:"friendId"`
	Verify   string `json:"verify,optional"`
}

type addFriendRes {}

type FriendDeleteReq {
	UserId   string `header:"Beaver-User-Id"`
	FriendId string `json:"friendId"`
}

type FriendDeleteRes {}

type friendListReq {
	UserId string `header:"Beaver-User-Id"`
	Page   int    `form:"page,optional"`
	Limit  int    `form:"limit,optional"`
}

type friendListRes {
	list []FriendInfoRes `json:"list"`
}

type userValidReq {
	UserId   string `header:"Beaver-User-Id"`
	Role     int8   `header:"Role"`
	FriendId uint   `json:"friendId"`
}

type userValidRes {
	Verification int8 `json:"verification"` //好友验证
}

type FriendValidStatusReq {
	UserId   string `header:"Beaver-User-Id"`
	VerifyId uint   `json:"verifyId"`
	Status   int8   `json:"status"`
}

type FriendValidStatusRes {}

type validListReq {
	UserId string `header:"Beaver-User-Id"`
	Page   int    `json:"page,optional"`
	Limit  int    `json:"limit,optional"`
}

type FriendValidInfo {
	UserId   string `json:"userId"` //用户Id
	Nickname string `json:"nickname"` //昵称
	Avatar   string `json:"avatar"` //头像
	Message  string `json:"message"` //附加消息
	Source   string `json:"source"` //来源
	Id       uint   `json:"id"` //验证记录Id
	Flag     string `json:"flag"` //send 发送者  receive 接收者
	Status   int8   `json:"status"` //状态 0 未处理 1 同意 2 拒绝
}

type validListRes {
	List  []FriendValidInfo `json:"list"`
	Count int64             `json:"count"`
}

type FriendInfoReq {
	UserId   string `header:"Beaver-User-Id"`
	FriendId string `form:"friendId"`
}

type FriendInfoRes {
	UserId   string `json:"userId"`
	Nickname string `json:"nickname"`
	Avatar   string `json:"avatar"`
	Abstract string `json:"abstract`
	Notice   string `json:"notice"`
	// 是否好友
	IsFriend       bool   `json:"isFriend"`
	ConversationId string `json:"conversationId"`
	Phone          string `json:"phone"`
}

type NoticeUpdateReq {
	Notice   string `json:"notice"` //备注
	UserId   string `header:"Beaver-User-Id"`
	FriendId string `json:"friendId"` //好友Id
}

type NoticeUpdateRes {}

type SearchReq {
	UserId string `header:"Beaver-User-Id"`
	Phone  string `form:"phone"` //用户id或昵称
}

type SearchRes {
	UserId   string `json:"userId"`
	Nickname string `json:"nickname"`
	Avatar   string `json:"avatar"`
	Abstract string `json:"abstract`
	Notice   string `json:"notice"`
	// 是否好友
	IsFriend       bool   `json:"isFriend"`
	ConversationId string `json:"conversationId"`
}

type SearchValidInfoReq {
	UserId   string `header:"Beaver-User-Id"`
	FriendId string `json:"friendId"` //好友Id
}

type SearchValidInfoRes {
	ValidId uint `json:"validId"`
}

service friend {
	@handler addFriend
	post /api/friend/add_friend (addFriendReq) returns (addFriendRes) //添加好友

	@handler userValidStatus
	post /api/friend/valid (FriendValidStatusReq) returns (FriendValidStatusRes) //好友校验状态

	@handler friendDelete
	delete /api/friend/delete (FriendDeleteReq) returns (FriendDeleteRes) //删除好友

	@handler friendList
	get /api/friend/friend_list (friendListReq) returns (friendListRes) //好友列表

	@handler validList
	post /api/friend/valid_list (validListReq) returns (validListRes) //好友校验列表

	@handler friendInfo
	get /api/friend/friend_info (FriendInfoReq) returns (FriendInfoRes) //获取好友信息

	@handler noticeUpdate
	get /api/friend/update_notice (NoticeUpdateReq) returns (NoticeUpdateRes) //修改好友备注

	@handler search
	get /api/friend/search (SearchReq) returns (SearchRes) //搜索好友

	@handler searchValidInfo
	post /api/friend/searchValidInfo (SearchValidInfoReq) returns (SearchValidInfoRes) //搜索校验好友信息
}

// goctl api go -api friend_api.api -dir . --home ../../../template
