// Code generated by goctl. DO NOT EDIT.
// Source: friend_rpc.proto

package friend

import (
	"context"

	"beaver/app/friend/friend_rpc/types/friend_rpc"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	GetFriendIdsRequest  = friend_rpc.GetFriendIdsRequest
	GetFriendIdsResponse = friend_rpc.GetFriendIdsResponse

	Friend interface {
		GetFriendIds(ctx context.Context, in *GetFriendIdsRequest, opts ...grpc.CallOption) (*GetFriendIdsResponse, error)
	}

	defaultFriend struct {
		cli zrpc.Client
	}
)

func NewFriend(cli zrpc.Client) Friend {
	return &defaultFriend{
		cli: cli,
	}
}

func (m *defaultFriend) GetFriendIds(ctx context.Context, in *GetFriendIdsRequest, opts ...grpc.CallOption) (*GetFriendIdsResponse, error) {
	client := friend_rpc.NewFriendClient(m.cli.Conn())
	return client.GetFriendIds(ctx, in, opts...)
}
