syntax = "v1"

// 上报用户版本请求
type ReportVersionReq {
    UserID        string `header:"Beaver-User-Id"`    // 用户ID
    Platform      string `json:"platform"`           // 平台名称
    Version       string `json:"version"`            // 版本号
    BuildNumber   int    `json:"buildNumber"`        // 构建号
    DeviceInfo    string `json:"deviceInfo"`         // 设备信息
    SystemVersion string `json:"systemVersion"`      // 系统版本
    Architecture  string `json:"architecture"`       // CPU架构
    UpdateChannel string `json:"updateChannel"`      // 更新渠道
}

// 上报用户版本响应
type ReportVersionRes {
    Success bool `json:"success"` // 操作是否成功
}

// 获取最新版本请求
type GetLatestVersionReq {
    Platform      string `json:"platform"`      // 平台名称（ios/android/windows/mac/linux）
    Version       string `json:"version"`       // 当前版本号
    BuildNumber   int    `json:"buildNumber"`   // 当前构建号
    Architecture  string `json:"architecture"`  // CPU架构
    UpdateChannel string `json:"updateChannel"` // 更新渠道
}

// 获取最新版本响应
type GetLatestVersionRes {
    HasUpdate      bool   `json:"hasUpdate"`      // 是否有更新
    Version        string `json:"version"`        // 最新版本号
    BuildNumber    int    `json:"buildNumber"`    // 最新构建号
    UpdateType     string `json:"updateType"`     // 更新类型：optional/mandatory
    DownloadURL    string `json:"downloadUrl"`    // 下载链接
    Size          int64  `json:"size"`           // 安装包大小
    MD5           string `json:"md5"`            // MD5校验
    ReleaseNotes  string `json:"releaseNotes"`   // 更新日志
    ForceUpdate   bool   `json:"forceUpdate"`    // 是否强制更新
}

// 新增：检查更新配置请求
type CheckUpdateConfigReq {
    Platform string `json:"platform"` // 平台名称
}

// 新增：更新配置响应
type CheckUpdateConfigRes {
    AutoCheck        bool  `json:"autoCheck"`        // 是否自动检查更新
    CheckInterval    int   `json:"checkInterval"`    // 检查间隔（小时）
    ForceUpdateBelow string `json:"forceUpdateBelow"` // 强制更新的版本号
}

// 新增：取消更新请求
type CancelUpdateReq {
    UserID   string `header:"Beaver-User-Id"` // 用户ID
    Platform string `json:"platform"`        // 平台名称
    Version  string `json:"version"`         // 目标版本号
}

type CancelUpdateRes {
    Success bool `json:"success"` // 操作是否成功
}

// 新增：更新进度上报请求
type ReportUpdateProgressReq {
    UserID    string  `header:"Beaver-User-Id"` // 用户ID
    Platform  string  `json:"platform"`         // 平台名称
    Version   string  `json:"version"`          // 目标版本号
    Progress  float64 `json:"progress"`         // 更新进度（0-100）
    Status    string  `json:"status"`          // 状态：downloading/installing/failed/success
    ErrorMsg  string  `json:"errorMsg"`        // 错误信息（如果有）
}

type ReportUpdateProgressRes {
    Success bool `json:"success"` // 操作是否成功
}

// 用户相关服务接口
service update {
    @handler reportVersion
    post /api/update/report (ReportVersionReq) returns (ReportVersionRes) // 上报版本信息
    
    @handler getLatestVersion
    get /api/update/latest (GetLatestVersionReq) returns (GetLatestVersionRes) // 获取最新版本
    
    @handler checkUpdateConfig
    get /api/update/config (CheckUpdateConfigReq) returns (CheckUpdateConfigRes) // 获取更新配置
    
    @handler cancelUpdate
    post /api/update/cancel (CancelUpdateReq) returns (CancelUpdateRes) // 取消更新
    
    @handler reportUpdateProgress
    post /api/update/progress (ReportUpdateProgressReq) returns (ReportUpdateProgressRes) // 上报更新进度
}

// goctl api go -api update_api.api -dir . --home ../../../template
