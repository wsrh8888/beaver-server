// Code generated by goctl. DO NOT EDIT.
package types

type AuthenticationReq struct {
	Token     string `header:"Token,optional"`
	ValidPath string `header:"ValidPath,optional"`
}

type AuthenticationRes struct {
	UserID string `json:"userId"`
}

type EmailLoginReq struct {
	Email    string `json:"email"`
	Code     string `json:"code"`       // 验证码
	DeviceID string `header:"deviceId"` // 客户端生成的设备唯一标识符
}

type EmailLoginRes struct {
	Token  string `json:"token"`
	UserID string `json:"userId"`
}

type EmailPasswordLoginReq struct {
	Email    string `json:"email"`
	Password string `json:"password"`
	DeviceID string `header:"deviceId"` // 客户端生成的设备唯一标识符
}

type EmailPasswordLoginRes struct {
	Token  string `json:"token"`
	UserID string `json:"userId"`
}

type EmailRegisterReq struct {
	Email    string `json:"email"`
	Password string `json:"password"`
	Code     string `json:"code"` // 邮箱验证码
}

type EmailRegisterRes struct {
	Message string `json:"message"`
}

type GetEmailCodeReq struct {
	Email string `json:"email"`
	Type  string `json:"type"` // 验证码类型：register(注册)、reset(重置密码)、login(登录)
}

type GetEmailCodeRes struct {
	Message string `json:"message"`
}

type GetPhoneCodeReq struct {
	Phone string `json:"phone"`
	Type  string `json:"type"` // 验证码类型：register(注册)、reset(重置密码)、login(登录)
}

type GetPhoneCodeRes struct {
	Message string `json:"message"`
}

type GetUserSessionsReq struct {
	UserID string `header:"Beaver-User-Id"`
}

type GetUserSessionsRes struct {
	Sessions []SessionInfo `json:"sessions"`
}

type LogoutReq struct {
	UserID string `header:"Beaver-User-Id"`
}

type LogoutRes struct {
}

type PhoneLoginReq struct {
	Phone    string `json:"phone"`
	Password string `json:"password"`
	DeviceID string `header:"deviceId"` // 客户端生成的设备唯一标识符
}

type PhoneLoginRes struct {
	Token  string `json:"token"`
	UserID string `json:"userId"`
}

type PhoneRegisterReq struct {
	Phone    string `json:"phone"`
	Password string `json:"password"`
	Code     string `json:"code"` // 手机验证码
}

type PhoneRegisterRes struct {
	Message string `json:"message"`
}

type RefreshTokenReq struct {
	UserID string `header:"Beaver-User-Id"`
}

type RefreshTokenRes struct {
	Token string `json:"token"`
}

type SessionInfo struct {
	DeviceID   string `json:"deviceId"`
	DeviceName string `json:"deviceName"`
	LastActive string `json:"lastActive"`
	IP         string `json:"ip"`
}

type TerminateSessionReq struct {
	UserID   string `header:"Beaver-User-Id"`
	DeviceID string `json:"deviceId"`
}

type TerminateSessionRes struct {
}
